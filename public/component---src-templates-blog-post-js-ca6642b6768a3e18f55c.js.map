{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","get","pageContext","previous","next","descriptionStyle","backgroundColor","frontmatter","color","console","log","className","title","src","photo","childImageSharp","fluid","style","dangerouslySetInnerHTML","__html","html","to","fields","slug","rel","React","Component","pageQuery"],"mappings":"uRASMA,E,gLACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYC,IAAIL,KAAKC,MAAO,gCAF3B,EAGoBD,KAAKC,MAAMK,YAA9BC,EAHD,EAGCA,SAAUC,EAHX,EAGWA,KACZC,EAAmB,CACrBC,gBAAiBX,EAAKY,YAAYC,MAClCA,MAAO,SAKX,OAFAC,QAAQC,IAAIf,GAGV,kBAAC,IAAD,KACE,yBAAKgB,UAAU,qBACb,kBAAC,IAAD,CAAQC,MAAUjB,EAAKY,YAAYK,MAAtB,MAAiCZ,IAC9C,yBAAKW,UAAU,OACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aAAaE,IAAKlB,EAAKY,YAAYO,MAAMC,gBAAgBC,MAAMH,MAC9E,yBAAKF,UAAU,wBAAwBM,MAAOZ,GAC1C,4BAAKV,EAAKY,YAAYK,OACtB,yBAAKM,wBAAyB,CAAEC,OAAQxB,EAAKyB,WAKzD,wBAAIT,UAAU,YACXR,GACC,wBAAIQ,UAAU,aACZ,kBAAC,IAAD,CAAMU,GAAIlB,EAASmB,OAAOC,KAAMC,IAAI,QACjCrB,EAASI,YAAYK,QAK3BR,GACC,wBAAIO,UAAU,cACZ,kBAAC,IAAD,CAAMU,GAAIjB,EAAKkB,OAAOC,KAAMC,IAAI,QAC7BpB,EAAKG,YAAYK,Y,GAtCLa,IAAMC,WAiDtBjC,YAER,IAAMkC,EAAS","file":"component---src-templates-blog-post-js-ca6642b6768a3e18f55c.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby'\nimport Link from 'gatsby-link';\nimport get from 'lodash/get';\n\nimport './blog-post.css';\nimport Layout from \"../components/layout\";\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title')\n    const { previous, next } = this.props.pageContext\n    const descriptionStyle = {\n        backgroundColor: post.frontmatter.color,\n        color: 'white'\n    };\n\n    console.log(post);\n\n    return (\n      <Layout>\n        <div className=\"container content\">\n          <Helmet title={`${post.frontmatter.title} | ${siteTitle}`} />\n          <div className=\"row\">\n              <div className=\"col\">\n                  <img className=\"demo-image\" src={post.frontmatter.photo.childImageSharp.fluid.src} />\n                  <div className=\"description-container\" style={descriptionStyle}>\n                      <h1>{post.frontmatter.title}</h1>\n                      <div dangerouslySetInnerHTML={{ __html: post.html }} />\n                  </div>\n              </div>\n          </div>\n\n          <ul className=\"post-nav\">\n            {previous && (\n              <li className=\"pull-left\">\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  {previous.frontmatter.title}\n                </Link>\n              </li>\n            )}\n\n            {next && (\n              <li className=\"pull-right\">\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title}\n                </Link>\n              </li>\n            )}\n          </ul>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      frontmatter {\n        title,\n        photo {\n          childImageSharp {\n            fluid(maxWidth: 1200) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        },\n        client,\n        type,\n        color\n      }\n    }\n  }\n`\n"],"sourceRoot":""}